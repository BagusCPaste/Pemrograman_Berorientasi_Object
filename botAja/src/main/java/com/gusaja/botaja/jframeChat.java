/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gusaja.botaja;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

/**
 *
 * @author muhba
 */
public class jframeChat extends javax.swing.JFrame {
    private static final String BOT_TOKEN = "6012795006:AAFcyVZ-p3lDIiGURtOs7Wb7Vcul2dwAMio";
    private static final String DB_URL = "jdbc:mysql://localhost:3306/db_botaja";
    private static final String DB_USERNAME = "root";
    private static final String DB_PASSWORD = "";
    Statement stm;
    ResultSet Rs;
    /**
     * Creates new form jframeChat
     */
    
    public jframeChat() {
        initComponents();
        baca_tabelBC();
        baca_tabelqoute();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblX = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblX.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblX.setText("X");
        lblX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblXMouseClicked(evt);
            }
        });

        jTextField2.setText("Masukan Pesan....");

        jButton2.setText("SEND BROADCAST");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel3.setText("BOT QOUTE TODAY");

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "CHAT_ID", "NAMA ", "PESAN", "TANGGAL"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        jButton3.setText("REFRESH");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("MORE MENU ...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("DELETE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(205, 205, 205)
                        .addComponent(lblX))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lblX, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblXMouseClicked
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(
            null, "Do you want to Exit ?","Exit Fried Rice Shop",
            JOptionPane.YES_NO_OPTION);
        if(reply == JOptionPane.YES_OPTION){
            System.exit(0);
        }else{
        }
    }//GEN-LAST:event_lblXMouseClicked
    private Connection createConnection() throws SQLException {
        return DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD);
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            // TODO add your handling code here:
    String message = jTextField2.getText();
    String dbUrl = "jdbc:mysql://localhost:3306/db_botaja";
    String dbUsername = "root";
    String dbPassword = "";

    
    try {
        Connection conn = DriverManager.getConnection(dbUrl, dbUsername, dbPassword);
        Statement stmt = conn.createStatement();
        String query = "SELECT nama FROM users";
        ResultSet rs = stmt.executeQuery(query);

        while (rs.next()) {
            String username = rs.getString("nama");
            sendMessageToUser(username, message);
           
        }
        
        conn.close();

        // Memberi tahu bahwa broadcast telah dikirim
       // JOptionPane.showMessageDialog(this, "Broadcast message sent to all users.");

        // Mengosongkan teks di text field
        jTextField2.setText("");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "An error occurred while sending broadcast.");
    }//GEN-LAST:event_jButton2ActionPerformed
    baca_tabelBC();
    }
    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        // TODO add your handling code here:
        int row=tabel.getSelectedRow();
        jTextField2.setText((String)tabel.getValueAt(row,0));
    }//GEN-LAST:event_tabelMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        baca_tabelBC();
        baca_tabelqoute();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        new newcomand().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String deletedId = jTextField2.getText();

        try (Connection connection = createConnection()) {
            // Hapus data dari tabel broadcast
            stm = connection.createStatement();
            String sql = "DELETE FROM broadcast WHERE id='" + deletedId + "'";
            stm.executeUpdate(sql);

            // Reset urutan ID
            sql = "ALTER TABLE broadcast AUTO_INCREMENT = 1";
            stm.executeUpdate(sql);

            // Baca ulang data dari tabel broadcast
            baca_tabelBC();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
                TelegramBotsApi telegramBotsApi = new TelegramBotsApi(DefaultBotSession.class);
                telegramBotsApi.registerBot(new mainBot());
            } catch (TelegramApiException e) {
                e.printStackTrace();
            }
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jframeChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jframeChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jframeChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jframeChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jframeChat().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblX;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
    
    private void sendMessageToUser(String username, String message) {
        // Kode untuk mengirim pesan ke pengguna melalui bot Telegram
        String botToken = BOT_TOKEN;
        long chatId = getChatIdFromUsername(username);

        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText(message);

        try {
            mainBot bot = new mainBot();
            bot.execute(sendMessage);
            saveMessageToDatabase(username, "Admin", message, java.time.LocalDate.now());
        } catch (TelegramApiException e) {
            // Menampilkan pesan kesalahan dalam JFrame
            JOptionPane.showMessageDialog(this, "An error occurred while sending the message: " + e.getMessage());
            e.printStackTrace();
        }
    }
    private void saveMessageToDatabase(String username,String namPeng, String messageText,  java.time.LocalDate tanggal) {
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
            try {
            String sql = "INSERT INTO broadcast (nama, nama_pengirim, pesan, tanggal) VALUES ('" + username + "', '" + namPeng + "', '" + messageText + "', '" + tanggal.toString() + "')";
                Statement statement;
                statement = connection.createStatement();
                statement.executeUpdate(sql);
                // Menyimpan pesan berhasil
                System.out.println("Pesan berhasil disimpan di database.");
                statement.close();
            } catch (SQLException e) {
                e.printStackTrace();
                // Gagal menyimpan pesan
                System.out.println("Gagal menyimpan pesan di database.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Gagal menyimpan pesan
            System.out.println("Gagal menyimpan pesan di database.");
        }
    }
    
    private long getChatIdFromUsername(String username) {
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD)) {
            String sql = "SELECT chat_id FROM users WHERE nama = ?";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, username);
            ResultSet resultSet = statement.executeQuery();

            if (resultSet.next()) {
                return resultSet.getLong("chat_id");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return 0; // Jika pengguna tidak ditemukan, kembalikan 0
    }
    private void baca_tabelBC(){
        try(Connection connection = createConnection()){
            stm = connection.createStatement();
            Rs = stm.executeQuery("SELECT * FROM broadcast");
            DefaultTableModel model = (DefaultTableModel)tabel.getModel();
            model.setRowCount(0);
            while(Rs.next()) {
                String id = Rs.getString("id");
                String nama = Rs.getString("nama");
                String nama_pengirim = Rs.getString("nama_pengirim");
                String pesan = Rs.getString("pesan");
                String tanggal = Rs.getString("tanggal");

                Object[] data = {id,nama,nama_pengirim,pesan,tanggal};
                model.addRow(data);
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    private void baca_tabelqoute() {
        try (Connection connection = createConnection()) {
            stm = connection.createStatement();
            Rs = stm.executeQuery("SELECT * FROM qoute");

            StringBuilder result = new StringBuilder();
            while (Rs.next()) {
                String tanggal = Rs.getString("tanggal");
                String nama = Rs.getString("nama");
                String pesan = Rs.getString("pesan");
                result.append(tanggal).append(": ").append(nama).append(": ").append(pesan).append("\n");
            }

            jTextArea2.setText(result.toString()); // Mengatur teks pada TextArea
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
